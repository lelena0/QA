abstract class Pet {
    abstract val runSpeed: Double
    abstract val swimSpeed: Double
    
    val totalSpeed: Double
        get() = runSpeed + swimSpeed
}

interface Swimmable {
    fun swim()
}

class Cat(override val runSpeed: Double, override val swimSpeed: Double) : Pet(), Runnable, Swimmable {
    override fun run() {
        println("I am a Cat, and I am running")
    }
    
    override fun swim() {
        println("I am a Cat, and I am swimming")
    }
}

class Fish(override val runSpeed: Double, override val swimSpeed: Double) : Pet(), Swimmable {
    override fun swim() {
        println("I am a Fish, and I am swimming")
    }
}

class Tiger(runSpeed: Double, swimSpeed: Double) : Cat(runSpeed, swimSpeed) {
    override fun run() {
        println("I am a Tiger, and I am running")
    }
}

class Lion(runSpeed: Double, swimSpeed: Double) : Cat(runSpeed, swimSpeed) {
    override fun run() {
        println("I am a Lion, and I am running")
    }
}

class Salmon(runSpeed: Double, swimSpeed: Double) : Fish(runSpeed, swimSpeed) {
    override fun swim() {
        println("I am a Salmon, and I am swimming")
    }
}

class Tuna(runSpeed: Double, swimSpeed: Double) : Fish(runSpeed, swimSpeed) {
    override fun swim() {
        println("I am a Tuna, and I am swimming")
    }
}

fun main() {
    val tiger = Tiger(20.0, 10.0)
    tiger.run()
    tiger.swim()
    println("Tiger total speed: ${tiger.totalSpeed}")
    
    val salmon = Salmon(5.0, 15.0)
    salmon.swim()
    println("Salmon total speed: ${salmon.totalSpeed}")
}
